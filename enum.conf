
ENUM_APP_DIR="${HOME}/.local/mgvc-ctf-enum-tools"

UA="User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:133.0) Gecko/20100101 Firefox/133.0"

SECLISTS_DIR="/usr/share/seclists"
WORDLISTS_DIR="/usr/share/wordlists"

PASS_WLIST="${WORDLISTS_DIR}/rockyou.txt"
ROCKYOU_WLIST="${WORDLISTS_DIR}/rockyou.txt"
FASTTRACK_WLIST="${WORDLISTS_DIR}/fasttrack.txt"

FFUF_WLIST_DIRS="${SECLISTS_DIR}/Discovery/Web-Content/common.txt"
FFUF_WLIST_DIRS_2="${SECLISTS_DIR}/Discovery/Web-Content/directory-list-2.3-big.txt"

FFUF_WLIST_PARAMS="${SECLISTS_DIR}/Discovery/Web-Content/burp-parameter-names.txt"
FFUF_WLIST_VHOSTS="${SECLISTS_DIR}/Discovery/DNS/namelist.txt"
FFUF_WLIST_VHOSTS_2="${SECLISTS_DIR}/Discovery/DNS/subdomains-top1million-110000.txt"
FFUF_WLIST_VHOSTS_3="${SECLISTS_DIR}/Discovery/DNS/n0kovo_subdomains.txt"
FFUF_WLIST_FILES="${SECLISTS_DIR}/Discovery/Web-Content/raft-large-files-lowercase.txt"

SNMP_WLIST="${SECLISTS_DIR}/Discovery/SNMP/snmp.txt"
SNMP_ONESIXTYONE_WLIST="${SECLISTS_DIR}/Discovery/SNMP/snmp-onesixtyone.txt"
USER_NAMES_LIST="${SECLISTS_DIR}/Usernames/Names/names.txt"
SHORT_NAMES_LIST="${WORDLISTS_DIR}/metasploit/unix_users.txt"

DNS_NAMELIST="${SECLISTS_DIR}/Discovery/DNS/namelist.txt"
DNS_NAMELIST_2="${SECLISTS_DIR}/Discovery/DNS/subdomains-top1million-110000.txt"

HASHCAT_PWD_RULES="/usr/share/hashcat/rules/best64.rule"

# colors output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;36m'
NC='\033[0m'
DIV="${YELLOW}------------------------------------------------------------------------------${NC}"
LAST_ASK=''
LAST_ANSWR=''

function separator() {
    if [[ -n $1 ]]; then
        echo -e "$DIV" | tee -a $1
    else
        echo -e "$DIV"
    fi
}

function ask() {
    LAST_ASK="${YELLOW}${1}${NC}"
    echo -ne "${LAST_ASK} "
    #read -r $2 < /dev/tty

    read -r input < /dev/tty
    eval "$2=\$input"
    LAST_ANSWR="$input"
}


function warnm() {
    echo -e "${RED}$1 ${NC}"
}

function tip() {
    msg=$1
    if [[ "${msg:0:1}" == "-" ]]; then
        echo -e "${BLUE}\t $msg ${NC}"
    else
        echo -e "${RED} -----------------------------------------------------------------------------${NC}"
        echo -e "${RED} -> TIP: ${NC}${BLUE}${msg}${NC}"
    fi
}

function gmsg() {
    msg=$1
    if [[ -n $2 ]]; then
        echo -e "${GREEN}${msg}${NC}" | tee -a $2
    else
        echo -e "${GREEN}${msg}${NC}"
    fi
}

function cmd() {
    local command
    read -e -i "$1" -p "> " command

    if [[ -n $2 ]]; then
        append=""
        if [[ -n $3 ]]; then
            append="-a "
        fi

        echo -e "\n>> ${GREEN}$command${NC}" | tee ${append}$2
        eval "$command | tee -a $2"
    else
        eval "$command"
    fi

    echo -e "\n>> ${GREEN}$command${NC}"
    ask "-> Repeat cmd ? (y/N)" choice
    if [[ "$choice" == "y" ]]; then
        cmd "$1" "$2" "true"
    fi
}

function onexit() {
    echo ''
    ask "exit ? (y/N)" choice
    if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
        exit 0
    fi
}

function parseUrl() {
  local URL="$1"
  local -n _host="$2"
  local -n _port="$3"

  _host=$(echo "$URL" | sed -E 's~https?://~~' | awk -F'/' '{print $1}' | awk -F'.' '
    {
        # Check if the input is an IP address (all numeric with dots)
        if ($1 ~ /^[0-9]+$/ && NF == 4) {
            print $0
        } else if (NF > 2) {
            print $(NF-2) "." $(NF-1) "." $NF
        } else {
            print $0
        }
    }')

    _port=$(echo "$_host" | awk -F ':' '{ if ($2 ~ /^[0-9]+$/) print $2 }')
    if [[ -z $_port ]]; then
      _port=$(echo "$URL" | awk -F'[:/]' '{ if ($0 ~ /^https:/) print "443"; else print "80" }')
    fi

    _host=$(echo "$_host" | cut -d ':' -f 1)
}

export -f separator
export -f ask
export -f tip
export -f cmd
export -f parseUrl
export -f warnm
export -f gmsg

if [[ ! -d $ENUM_APP_DIR ]]; then
    mkdir -p "$ENUM_APP_DIR"
fi

# catch CTRL+C
#trap onexit SIGINT